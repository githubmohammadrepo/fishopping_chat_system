<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO chat</title>
  <style>
    body {
      margin: 0;
      padding-bottom: 3rem;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    #form {
      background: rgba(0, 0, 0, 0.15);
      padding: 0.25rem;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      height: 3rem;
      box-sizing: border-box;
      backdrop-filter: blur(10px);
    }

    #input {
      border: none;
      padding: 0 1rem;
      flex-grow: 1;
      border-radius: 2rem;
      margin: 0.25rem;
    }

    #input:focus {
      outline: none;
    }

    #form>button {
      background: #333;
      border: none;
      padding: 0 1rem;
      margin: 0.25rem;
      border-radius: 3px;
      outline: none;
      color: #fff;
    }

    #messages {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    #messages>li {
      padding: 0.5rem 1rem;
    }

    #messages>li:nth-child(odd) {
      background: #efefef;
    }
  </style>
</head>

<body>
  <ul id="messages"></ul>
  <form id="form" action="/test/chat" method="post">
    <input id="input" autocomplete="off" />
    <button type="submit">Send</button>
  </form>



  <script type="module">
    import { io } from "https://cdn.socket.io/4.4.1/socket.io.esm.min.js";

    const socket = io("ws://localhost:3001/",
      {
        transports: ["websocket"],
        rejectUnauthorized: false,
        cors: {
          origin: "ws://localhost:3001",
          credentials: true
        }
      },
    );


    


    // client-side
    socket.on("connect", () => {
     
      socket.emit('authentication', {
        username: sessionStorage.getItem('username'),
        province_name: sessionStorage.getItem('province_name'),
        password: sessionStorage.getItem('password')
      });

      socket.on('authenticated', function (t) {
        console.log(t)

        // use the socket as usual
        console.log(socket.id); // x8WIv7-mJelg7on_ALbx

        var form = document.getElementById('form');
        var input = document.getElementById('input');

        form.addEventListener('submit', function (e) {
          e.preventDefault();
          if (input.value) {
            socket.emit('publicMessage', input.value);
            input.value = '';
          }
        });

      });

      socket.on('publicMessage', function (t, b) {
        console.log(t)
        console.log(b)
      });

    });

    socket.on("disconnect", () => {
      console.log(socket.id); // undefined
    });



  </script>
</body>

</html>